{"version":3,"sources":["webpack:///./src/components/organisms/Test.tsx","webpack:///./src/components/organisms/LecturerMobileTable.tsx","webpack:///./src/pages/hall-of-fame.tsx","webpack:///./src/content/hall-of-fame.yaml"],"names":["RankCss","TitleCss","TitleProbPickCss","SunweeCss","NameCss","StCss","Test","props","contests","map","contest","className","css","contest_name","awards","award","prize","member","school","problem_picker","picker","key","name","TableCss","SchoolCss","LecturerMobileTable","lecturers","item","HallOfFame","data","path","getData","e","arr","target","innerHTML","split","document","getElementsByClassName","classList","contains","remove","add","season","i","length","tabs","title","onClick","HallOfFameData","content","val","year","semester","undefined","studies","study","topic","lecturer","join","Object","values","module","exports"],"mappings":"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","file":"component---src-pages-hall-of-fame-tsx-faaebaa8575b41401431.js","sourcesContent":["import { css } from \"@emotion/core\"\nimport React, { Fragment } from \"react\"\nimport { IAward, IContest } from \"@models/contest.d.ts\"\n\ntype TestProps = {\n  contests: Array<any>\n}\nconst RankCss = css`\n  width: 11rem;\n  display: inline-block;\n  /* 어렵다... */\n  float: left;\n`\nconst TitleCss = css`\n  font-size: 1.5rem;\n  font-family: \"appleNeoR\";\n  margin-bottom: 0.7rem;\n  border-bottom: 1px solid hsla(0, 0%, 0%, 0.12);\n  padding-bottom: 0.6rem;\n  padding-left: 0.4rem;\n  text-align: left;\n`\nconst TitleProbPickCss = css`\n  font-size: 1.5rem;\n  font-family: \"appleNeoR\";\n  margin-bottom: 0.7rem;\n  width: 6.3rem;\n  padding-bottom: 0.6rem;\n  padding-left: 0.4rem;\n  text-align: left;\n`\nconst SunweeCss = css`\n  font-size: 1.1rem;\n  padding-right: 0;\n  padding-bottom: 0;\n`\nconst NameCss = css`\n  font-family: \"appleNeoM\";\n  font-size: 1.3rem;\n  text-align: left;\n  padding-bottom: 0;\n`\nconst ProbPickCss = css`\n  padding-right: 0;\n  padding-bottom: 0;\n  padding-top: 0;\n`\nconst StCss=css`\nfont-size: 0.7rem;\n`\nconst WrapCss = css``\nexport default function Test(props: TestProps) {\n  return (\n    <Fragment>\n      {props.contests.map(contest => {\n        return (\n          <div className=\"test\">\n            <table className=\"hof--rank\" css={RankCss}>\n              <caption className=\"title\" css={TitleCss}>\n                {contest.contest_name}\n              </caption>\n              <tbody>\n                {contest.awards.map((award: IAward) => {\n                  return (\n                    <tr>\n                      <td className=\"sunwee\" css={SunweeCss}>\n                        {award.prize == 1 ? [1,<span css={StCss}>st</span>] : (award.prize == 2 ? [2,<span css={StCss}>nd</span>] : [3,<span css={StCss}>rd</span>])}\n                      </td>\n                      <td className=\"name\" css={NameCss}>\n                        {award.member}\n                        <span className=\"school\" css={{ fontSize: \"0.8rem\" }}>\n                          {award.school}\n                        </span>\n                      </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n            <table\n              className=\"ProbPicker--wrap\"\n              css={{ display: \"inline-block\" }}\n            >\n              <caption className=\"title\" css={TitleProbPickCss}>\n                &nbsp;\n              </caption>\n              <tbody>\n                {contest.problem_picker.map((picker, key) => {\n                  if (key == 0)\n                    return (\n                      <tr>\n                        <td css={{padding: 0}}>문항선정</td>\n                        <td className=\"name\" css={NameCss}>\n                          {picker.name}\n                          <span className=\"school\" css={{ fontSize: \"0.8rem\" }}>\n                            {picker.school}\n                          </span>\n                        </td>\n                      </tr>\n                    )\n                  else\n                    return (\n                      <tr>\n                        <td css={{border:\"none\"}}></td>\n                        <td className=\"name\" css={NameCss}>\n                          {picker.name}\n                          <span className=\"school\" css={{ fontSize: \"0.8rem\" }}>\n                            {picker.school}\n                          </span>\n                        </td>\n                      </tr>\n                    )\n                })}\n              </tbody>\n            </table>\n          </div>\n        )\n      })}\n    </Fragment>\n  )\n}\n","import { css } from \"@emotion/core\"\nimport React from \"react\"\ntype TestProps = {\n  lecturers: Array<any>\n  name: string\n  lecturer: string\n  lecturer1: string\n  lecturer2?: string\n  lecturer3?: string\n}\nconst NameCss = css`\n  font-family: \"appleNeoM\";\n  font-size: 1.1rem;\n  padding-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  text-align: center;\n  border-bottom: none;\n`\nconst TitleCss = css`\n  font-size: 1.5rem;\n  font-family: \"appleNeoR\";\n  margin-bottom: 0.5rem;\n  text-align: left;\n\n  border-bottom: 1px solid #707070;\n  width: 5rem;\n  padding-bottom: 0.6rem;\n  padding-left: 0.4rem;\n`\nconst TableCss = css`\n  width: 100%;\n  margin: 0 auto;\n`\nconst SchoolCss = css`\n  font-size: 0.8rem;\n`\nexport default function LecturerMobileTable(props: TestProps) {\n  return (\n    <div className=\"lecturer--wrap--mobile\">\n      <table css={TableCss}>\n        <caption css={TitleCss}>강사진</caption>\n        <tbody>\n          {props.lecturers.map((item, key) => {\n            if (key % 2 == 0) {\n              return (\n                <td css={NameCss}>\n                  {item.name}\n                  <span css={SchoolCss}>{item.school}</span>\n                </td>\n              )\n            } else {\n              return (\n                <td css={NameCss}>\n                  {item.name}\n                  <span css={SchoolCss}>{item.school}</span>\n                </td>\n              )\n            }\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\n// FIXME : gatsby로 빌드 돌릴때는 문제가 없지만 VSCode에서는 빨간줄떠서 해결하긴 해야함.\nimport Layout from \"@components/layout\"\nimport SEO from \"@components/seo\"\nimport { IStudy, ILecturer } from \"@models/study.d.ts\"\nimport StudyTitle from \"@components/molecules/StudyTitle\"\nimport Test from \"@components/organisms/Test\"\nimport LecturerMobileTable from \"@components/organisms/LecturerMobileTable\"\nimport \"../fonts/fonts.css\"\nimport \"./index.css\"\nimport \"./hall-of-fame.css\"\n\n// import HallOfFameData from \"@content/hall-of-fame.yaml\"\nimport HallOfFameData from \"@content/hall-of-fame.yaml\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst HallOfFame: React.FC<PageProps<DataProps>> = ({ data, path }) => {\n  const getData = e => {\n    const arr = e.target.innerHTML.split(\" \")\n    const name = arr[0] + \"--\" + arr[1]\n\n    const target = document.getElementsByClassName(name)[0]\n    if (target.classList.contains(\"hide\")) target.classList.remove(\"hide\")\n    if (!target.classList.contains(\"show\")) target.classList.add(\"show\")\n\n    const season = document.getElementsByClassName(\"season--wrap\")\n    for (var i = 0; i < season.length; i++) {\n      if (!season[i].classList.contains(name)) {\n        if (!season[i].classList.contains(\"hide\"))\n          season[i].classList.add(\"hide\")\n        if (season[i].classList.contains(\"show\"))\n          season[i].classList.remove(\"show\")\n      }\n    }\n    var tabs = document.getElementsByClassName(\"hof--season\")\n    for (var i = 0; i < tabs.length; i++) {\n      if (tabs[i] == e.target) {\n        if (tabs[i].classList.contains(\"hide--tab\"))\n          tabs[i].classList.remove(\"hide--tab\")\n        if (!tabs[i].classList.contains(\"show--tab\"))\n          tabs[i].classList.add(\"show--tab\")\n      } else {\n        if (!tabs[i].classList.contains(\"hide--tab\"))\n          tabs[i].classList.add(\"hide--tab\")\n        if (tabs[i].classList.contains(\"show--tab\"))\n          tabs[i].classList.remove(\"show--tab\")\n      }\n    }\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"ICPC Sinchon - Hall Of Fame\" />\n      <div className=\"hof--wrapper\">\n        {/* 상단 소개 head */}\n        <div className=\"head\">\n          <div className=\"logo--info--wrapper\">\n            <div className=\"hof--logo--wrapper\">HALL OF FAME</div>\n            <div className=\"hof--info--wrapper\">\n              <span className=\"hof--info--part\">\n                ICPC 신촌 연합 활동에 기여를 해주신 분들과,&nbsp;\n              </span>\n              <span className=\"hof--info--part\">\n                열심히 활동하여 우수한 성적을 거둔 사람들을 기립니다\n              </span>\n            </div>\n          </div>\n        </div>\n        {/* 탭 모음 */}\n        <div className=\"content-wrapper\">\n          <div className=\"hof--season--wrapper\">\n            <div className=\"hof--season show--tab\" onClick={e => getData(e)}>\n              2020 Winter\n            </div>\n            <div className=\"hof--season hide--tab\" onClick={e => getData(e)}>\n              2020 Summer\n            </div>\n            <div className=\"hof--season hide--tab\" onClick={e => getData(e)}>\n              2021 Winter\n            </div>\n            <div className=\"hof--season hide--tab\" onClick={e => getData(e)}>\n              2021 Summer\n            </div>\n          </div>\n          {HallOfFameData.content.map(val => {\n            {\n              /* data명 + show/hide 표시 : 2020 Winter */\n            }\n            let data\n            if (val.year + \"--\" + val.semester == \"2020--Winter\")\n              data = val.year + \"--\" + val.semester + \" season--wrap show\"\n            else data = val.year + \"--\" + val.semester + \" season--wrap hide\"\n\n            // 시행되지 않은 알고리즘 캠프\n            if (val.studies == undefined) {\n              return (\n                <div className={data}>\n                  <div className=\"no--test\">\n                    아직 시행되지 않은 Algorithm Camp 입니다\n                  </div>\n                </div>\n              )\n\n              // 시행된 알고리즘 캠프\n            } else\n              return (\n                <div className={data}>\n                  {/* 탭 아래 알고리즘 캠프 이름 */}\n                  {val.studies.map((study: IStudy) => {\n                    //스터디 이름과 강사진\n                    return (\n                      <div className=\"study--wrap\">\n                        <div className=\"title--wrap\">\n                          <div className=\"study--title\">{study.topic}</div>\n                          <div className=\"lecturer--wrap\">\n                            <span className=\"lecturer\">강사진</span>\n                            <span className=\"lecturer--list\">\n                              {study.lecturers\n                                .map(\n                                  (lecturer: ILecturer) =>\n                                    `${lecturer.name} ${lecturer.school}`\n                                )\n                                .join(\" | \")}\n                            </span>\n                          </div>\n                        </div>\n\n                        <LecturerMobileTable\n                          lecturers={Object.values(study.lecturers)}\n                        ></LecturerMobileTable>\n\n                        {study.contests == undefined ? (\n                          <div className=\"hof--no--contest\">\n                            모의고사가 진행되지 않았습니다\n                          </div>\n                        ) : (\n                          <div className=\"contest--wrap\">\n                            <Test contests={Object.values(study.contests)} />\n                          </div>\n                        )}\n                      </div>\n                    )\n                  })}\n                </div>\n              )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default HallOfFame\n","module.exports = {\"title\":\"Hall Of Fame\",\"content\":[{\"year\":2020,\"semester\":\"Winter\",\"activity_type\":\"study\",\"studies\":[{\"topic\":\"초급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"이태한\",\"school\":\"서강대\"},{\"name\":\"이재열\",\"school\":\"홍익대\"},{\"name\":\"김성민\",\"school\":\"홍익대\"}],\"contests\":[{\"contest_name\":\"중간고사\",\"problem_picker\":[{\"name\":\"이태한\",\"school\":\"서강대\"},{\"name\":\"이재열\",\"school\":\"홍익대\"},{\"name\":\"김성민\",\"school\":\"홍익대\"}],\"awards\":[{\"prize\":1,\"member\":\"강상원\",\"school\":\"서강대\"},{\"prize\":2,\"member\":\"주상민\",\"school\":\"서강대\"},{\"prize\":3,\"member\":\"윤상현\",\"school\":\"서강대\"}]},{\"contest_name\":\"기말고사\",\"problem_picker\":[{\"name\":\"이태한\",\"school\":\"서강대\"},{\"name\":\"이재열\",\"school\":\"홍익대\"},{\"name\":\"김성민\",\"school\":\"홍익대\"},{\"name\":\"정연두\",\"school\":\"홍익대\"}],\"awards\":[{\"prize\":1,\"member\":\"강상원\",\"school\":\"서강대\"},{\"prize\":2,\"member\":\"주상민\",\"school\":\"서강대\"},{\"prize\":3,\"member\":\"임세홍\",\"school\":\"서강대\"}]}]},{\"topic\":\"중급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"임지환\",\"school\":\"서강대\"},{\"name\":\"이기현\",\"school\":\"서강대\"}],\"contests\":[{\"contest_name\":\"중간고사\",\"problem_picker\":[{\"name\":\"임지환\",\"school\":\"서강대\"},{\"name\":\"이기현\",\"school\":\"서강대\"}],\"awards\":[{\"prize\":1,\"member\":\"백성익\",\"school\":\"홍익대\"},{\"prize\":2,\"member\":\"정재현\",\"school\":\"홍익대\"},{\"prize\":3,\"member\":\"강승구\",\"school\":\"서강대\"}]},{\"contest_name\":\"기말고사\",\"problem_picker\":[{\"name\":\"임지환\",\"school\":\"서강대\"},{\"name\":\"이기현\",\"school\":\"서강대\"}],\"awards\":[{\"prize\":1,\"member\":\"장주호\",\"school\":\"서강대\"},{\"prize\":2,\"member\":\"백성익\",\"school\":\"홍익대\"},{\"prize\":3,\"member\":\"정재현\",\"school\":\"홍익대\"}]}]},{\"topic\":\"고급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"박수현\",\"school\":\"서강대\"},{\"name\":\"이상원\",\"school\":\"서강대\"}]}]},{\"year\":2020,\"semester\":\"Summer\",\"activity_type\":\"study\",\"studies\":[{\"topic\":\"초급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"배철환\",\"school\":\"서강대\"},{\"name\":\"백성익\",\"school\":\"홍익대\"}],\"contests\":[{\"contest_name\":\"중간고사\",\"problem_picker\":[{\"name\":\"이길원\",\"school\":\"서강대\"},{\"name\":\"전해성\",\"school\":\"서강대\"},{\"name\":\"남수연\",\"school\":\"숙명여대\"}],\"awards\":[{\"prize\":1,\"member\":\"김태윤\",\"school\":\"연세대\"},{\"prize\":2,\"member\":\"김도현\",\"school\":\"홍익대\"},{\"prize\":3,\"member\":\"윤이빈\",\"school\":\"숙명여대\"}]},{\"contest_name\":\"기말고사\",\"problem_picker\":[{\"name\":\"백성익\",\"school\":\"홍익대\"},{\"name\":\"이재열\",\"school\":\"홍익대\"}],\"awards\":[{\"prize\":1,\"member\":\"김태윤\",\"school\":\"연세대\"},{\"prize\":2,\"member\":\"김도현\",\"school\":\"홍익대\"},{\"prize\":3,\"member\":\"김경민\",\"school\":\"홍익대\"}]}]},{\"topic\":\"중급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"윤인섭\",\"school\":\"연세대\"},{\"name\":\"이준석\",\"school\":\"서강대\"}],\"contests\":[{\"contest_name\":\"중간고사\",\"problem_picker\":[{\"name\":\"이기현\",\"school\":\"서강대\"},{\"name\":\"최재민\",\"school\":\"KAIST\"}],\"awards\":[{\"prize\":1,\"member\":\"박재형\",\"school\":\"서강대\"},{\"prize\":2,\"member\":\"남유진\",\"school\":\"연세대\"},{\"prize\":3,\"member\":\"박준성\",\"school\":\"서강대\"}]},{\"contest_name\":\"기말고사\",\"problem_picker\":[{\"name\":\"백성익\",\"school\":\"홍익대\"},{\"name\":\"이국렬\",\"school\":\"연세대\"},{\"name\":\"임지환\",\"school\":\"서강대\"},{\"name\":\"이준석\",\"school\":\"서강대\"}],\"awards\":[{\"prize\":1,\"member\":\"김관우\",\"school\":\"서강대\"},{\"prize\":2,\"member\":\"남유진\",\"school\":\"연세대\"},{\"prize\":3,\"member\":\"이승은\",\"school\":\"서강대\"}]}]},{\"topic\":\"고급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"강사는 없었으나, 전해성(서강대)님이 하드캐리\",\"school\":\" \"}]}]},{\"year\":2021,\"semester\":\"Winter\",\"activity_type\":\"study\",\"studies\":[{\"topic\":\"초급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"강효규\",\"school\":\"서강대\"},{\"name\":\"김기선\",\"school\":\"홍익대\"}]},{\"topic\":\"중급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"윤인섭\",\"school\":\"연세대\"},{\"name\":\"한동규\",\"school\":\"UNIST\"}]},{\"topic\":\"고급 알고리즘 스터디\",\"lecturers\":[{\"name\":\"전해성\",\"school\":\"서강대\"},{\"name\":\"이국렬\",\"school\":\"연세대\"}]}]},{\"year\":2021,\"semester\":\"Summer\",\"activity_type\":\"study\",\"studies\":null}]}"],"sourceRoot":""}